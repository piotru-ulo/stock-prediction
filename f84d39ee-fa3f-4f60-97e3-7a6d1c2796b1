{
  "nbformat": 4,
  "nbformat_minor": 0,
  "metadata": {
    "colab": {
      "provenance": []
    },
    "kernelspec": {
      "name": "python3",
      "display_name": "Python 3"
    },
    "language_info": {
      "name": "python"
    }
  },
  "cells": [
    {
      "cell_type": "code",
      "execution_count": 70,
      "metadata": {
        "colab": {
          "base_uri": "https://localhost:8080/",
          "height": 1000
        },
        "id": "r3ivRENixxiu",
        "outputId": "f047e453-724f-4f20-b912-c611317d2af6"
      },
      "outputs": [
        {
          "output_type": "stream",
          "name": "stdout",
          "text": [
            "\n",
            "Selecting best features...\n",
            "Selected 8 best features:\n",
            "  1. price_momentum: 0.219\n",
            "  2. ma_10: 0.892\n",
            "  3. ma_5: 0.930\n",
            "  4. close_lag_1: 0.935\n",
            "  5. open: 0.952\n",
            "  6. high: 0.959\n",
            "  7. low: 0.962\n",
            "  8. close: 0.967\n",
            "Epoch 1/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m3s\u001b[0m 159ms/step - loss: 0.3048 - val_loss: 0.0372\n",
            "Epoch 2/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m1s\u001b[0m 42ms/step - loss: 0.0984 - val_loss: 0.0360\n",
            "Epoch 3/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 41ms/step - loss: 0.0686 - val_loss: 0.0178\n",
            "Epoch 4/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 96ms/step - loss: 0.0658 - val_loss: 0.0274\n",
            "Epoch 5/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 55ms/step - loss: 0.0423 - val_loss: 0.0525\n",
            "Epoch 6/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 43ms/step - loss: 0.0475 - val_loss: 0.0542\n",
            "Epoch 7/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 48ms/step - loss: 0.0436 - val_loss: 0.0338\n",
            "Epoch 8/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 49ms/step - loss: 0.0321 - val_loss: 0.0164\n",
            "Epoch 9/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 44ms/step - loss: 0.0351 - val_loss: 0.0118\n",
            "Epoch 10/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 74ms/step - loss: 0.0313 - val_loss: 0.0111\n",
            "Epoch 11/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - loss: 0.0334 - val_loss: 0.0123\n",
            "Epoch 12/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0191 - val_loss: 0.0136\n",
            "Epoch 13/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0173 - val_loss: 0.0146\n",
            "Epoch 14/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0202 - val_loss: 0.0141\n",
            "Epoch 15/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0266 - val_loss: 0.0122\n",
            "Epoch 16/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0250 - val_loss: 0.0129\n",
            "Epoch 17/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0210 - val_loss: 0.0132\n",
            "Epoch 18/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 77ms/step - loss: 0.0217 - val_loss: 0.0109\n",
            "Epoch 19/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0218 - val_loss: 0.0102\n",
            "Epoch 20/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0161 - val_loss: 0.0096\n",
            "Epoch 21/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0201 - val_loss: 0.0093\n",
            "Epoch 22/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0184 - val_loss: 0.0092\n",
            "Epoch 23/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0144 - val_loss: 0.0102\n",
            "Epoch 24/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0168 - val_loss: 0.0105\n",
            "Epoch 25/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0184 - val_loss: 0.0102\n",
            "Epoch 26/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 30ms/step - loss: 0.0154 - val_loss: 0.0105\n",
            "Epoch 27/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 43ms/step - loss: 0.0151 - val_loss: 0.0098\n",
            "Epoch 28/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0205 - val_loss: 0.0096\n",
            "Epoch 29/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0107 - val_loss: 0.0118\n",
            "Epoch 30/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0129 - val_loss: 0.0098\n",
            "Epoch 31/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - loss: 0.0158 - val_loss: 0.0076\n",
            "Epoch 32/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 57ms/step - loss: 0.0153 - val_loss: 0.0081\n",
            "Epoch 33/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0135 - val_loss: 0.0112\n",
            "Epoch 34/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0135 - val_loss: 0.0102\n",
            "Epoch 35/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 33ms/step - loss: 0.0107 - val_loss: 0.0077\n",
            "Epoch 36/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 29ms/step - loss: 0.0150 - val_loss: 0.0090\n",
            "Epoch 37/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0125 - val_loss: 0.0119\n",
            "Epoch 38/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 56ms/step - loss: 0.0143 - val_loss: 0.0082\n",
            "Epoch 39/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 31ms/step - loss: 0.0140 - val_loss: 0.0075\n",
            "Epoch 40/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0128 - val_loss: 0.0092\n",
            "Epoch 41/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0128 - val_loss: 0.0084\n",
            "Epoch 42/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 38ms/step - loss: 0.0119 - val_loss: 0.0067\n",
            "Epoch 43/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0107 - val_loss: 0.0080\n",
            "Epoch 44/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 24ms/step - loss: 0.0128 - val_loss: 0.0080\n",
            "Epoch 45/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0103 - val_loss: 0.0079\n",
            "Epoch 46/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 26ms/step - loss: 0.0117 - val_loss: 0.0089\n",
            "Epoch 47/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 39ms/step - loss: 0.0109 - val_loss: 0.0067\n",
            "Epoch 48/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 50ms/step - loss: 0.0093 - val_loss: 0.0068\n",
            "Epoch 49/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 25ms/step - loss: 0.0098 - val_loss: 0.0077\n",
            "Epoch 50/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 34ms/step - loss: 0.0094 - val_loss: 0.0118\n",
            "Epoch 51/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 37ms/step - loss: 0.0122 - val_loss: 0.0088\n",
            "Epoch 52/100\n",
            "\u001b[1m5/5\u001b[0m \u001b[32m━━━━━━━━━━━━━━━━━━━━\u001b[0m\u001b[37m\u001b[0m \u001b[1m0s\u001b[0m 54ms/step - loss: 0.0117 - val_loss: 0.0079\n",
            "Prediction Accuracy Metrics:\n",
            "Mean Squared Error (MSE):     10.7006\n",
            "Root Mean Squared Error:      3.2712\n",
            "Mean Absolute Error (MAE):    2.7223\n",
            "Mean Absolute Percentage Error: 1.58%\n",
            "Directional Accuracy:         50.00%\n"
          ]
        },
        {
          "output_type": "display_data",
          "data": {
            "text/plain": [
              "<Figure size 1400x600 with 1 Axes>"
            ],
            "image/png": "\n"
          },
          "metadata": {}
        }
      ],
      "source": [
        "import pandas as pd\n",
        "import numpy as np\n",
        "from stockdex import Ticker\n",
        "import matplotlib.pyplot as plt\n",
        "import warnings\n",
        "warnings.filterwarnings(\"ignore\")\n",
        "\n",
        "from sklearn.metrics import mean_squared_error, mean_absolute_error\n",
        "from sklearn.preprocessing import StandardScaler, MinMaxScaler\n",
        "from tensorflow.keras.models import Sequential\n",
        "from tensorflow.keras.layers import LSTM, Dense, Dropout\n",
        "from tensorflow.keras.callbacks import EarlyStopping\n",
        "from tensorflow.keras.optimizers import Adam\n",
        "\n",
        "def get_data(range, dataGranularity, stock):\n",
        "    ticker = Ticker(stock)\n",
        "    try:\n",
        "        data = ticker.yahoo_api_price(range=range, dataGranularity=dataGranularity)\n",
        "        df = pd.DataFrame({\n",
        "            'timestamp': data['timestamp'],\n",
        "            'open': data['open'],\n",
        "            'high': data['high'],\n",
        "            'low': data['low'],\n",
        "            'close': data['close'],\n",
        "            'volume': data['volume'],\n",
        "        })\n",
        "        df['timestamp'] = pd.to_datetime(df['timestamp'])\n",
        "        df.set_index('timestamp', inplace=True)\n",
        "        return df\n",
        "    except Exception as e:\n",
        "        print(f\"An error occurred while fetching data for {stock}: {e}\")\n",
        "        return None\n",
        "\n",
        "def create_sequences(data, target, sequence_length):\n",
        "    X, y = [], []\n",
        "    for i in range(len(data) - sequence_length):\n",
        "        X.append(data[i:i + sequence_length])\n",
        "        y.append(target[i + sequence_length])\n",
        "    return np.array(X), np.array(y)\n",
        "\n",
        "def add_enhanced_features(df):\n",
        "    df_enhanced = df.copy()\n",
        "\n",
        "    # Lagged features\n",
        "    df_enhanced['close_lag_1'] = df_enhanced['close'].shift(1)\n",
        "    df_enhanced['return_1d'] = df_enhanced['close'].pct_change()\n",
        "\n",
        "    # Moving averages\n",
        "    df_enhanced['ma_5'] = df_enhanced['close'].rolling(window=5).mean()\n",
        "    df_enhanced['ma_10'] = df_enhanced['close'].rolling(window=10).mean()\n",
        "\n",
        "    # Momentum indicators\n",
        "    df_enhanced['price_momentum'] = (df_enhanced['close'] - df_enhanced['ma_5']) / df_enhanced['ma_5']\n",
        "\n",
        "    # Volume features\n",
        "    df_enhanced['volume_ma_5'] = df_enhanced['volume'].rolling(window=5).mean()\n",
        "    df_enhanced['volume_momentum'] = (df_enhanced['volume'] - df_enhanced['volume_ma_5']) / df_enhanced['volume_ma_5']\n",
        "\n",
        "    # Volatility\n",
        "    df_enhanced['intraday_vol'] = (df_enhanced['high'] - df_enhanced['low']) / df_enhanced['close']\n",
        "\n",
        "    # Drop rows with NaN values\n",
        "    df_enhanced = df_enhanced.dropna()\n",
        "\n",
        "    return df_enhanced\n",
        "\n",
        "def select_best_features(X, y, feature_names, k=8):\n",
        "    correlations = []\n",
        "\n",
        "    for i in range(X.shape[2]):\n",
        "        feature_data = X[:, -1, i]\n",
        "        correlation = np.corrcoef(feature_data, y.ravel())[0, 1]\n",
        "        correlations.append(abs(correlation))\n",
        "\n",
        "    k = min(k, len(feature_names))\n",
        "    top_k_indices = np.argsort(correlations)[-k:]\n",
        "\n",
        "    selected_feature_names = [feature_names[i] for i in top_k_indices]\n",
        "\n",
        "    print(f\"Selected {k} best features:\")\n",
        "    for i, name in enumerate(selected_feature_names):\n",
        "        idx = top_k_indices[i]\n",
        "        print(f\"  {i+1}. {name}: {correlations[idx]:.3f}\")\n",
        "\n",
        "    return X[:, :, top_k_indices], selected_feature_names\n",
        "\n",
        "def create_enhanced_model(input_shape):\n",
        "    model = Sequential([\n",
        "        LSTM(32, return_sequences=False, input_shape=input_shape),\n",
        "        Dropout(0.2),\n",
        "        Dense(1)\n",
        "    ])\n",
        "\n",
        "    optimizer = Adam(learning_rate=0.001)\n",
        "    model.compile(optimizer=optimizer, loss='mean_squared_error')\n",
        "\n",
        "    return model\n",
        "\n",
        "def train_model(X_train, y_train, X_test, y_test, close_scaler):\n",
        "    model = create_enhanced_model((X_train.shape[1], X_train.shape[2]))\n",
        "\n",
        "    early_stopping = EarlyStopping(\n",
        "        monitor='val_loss',\n",
        "        patience=10,\n",
        "        restore_best_weights=True,\n",
        "        verbose=0\n",
        "    )\n",
        "\n",
        "    history = model.fit(\n",
        "        X_train, y_train,\n",
        "        epochs=100,\n",
        "        batch_size=32,\n",
        "        validation_split=0.2,\n",
        "        callbacks=[early_stopping],\n",
        "        verbose=1\n",
        "    )\n",
        "\n",
        "    predictions = model.predict(X_test, verbose=0)\n",
        "    predictions = close_scaler.inverse_transform(predictions)\n",
        "    y_test_actual = close_scaler.inverse_transform(y_test)\n",
        "\n",
        "    return predictions, y_test_actual, history\n",
        "\n",
        "def calculate_metrics(actual, predicted):\n",
        "    mse = mean_squared_error(actual, predicted)\n",
        "    mae = mean_absolute_error(actual, predicted)\n",
        "    rmse = np.sqrt(mse)\n",
        "    mape = np.mean(np.abs((actual - predicted) / actual)) * 100\n",
        "\n",
        "    actual_direction = np.diff(actual.flatten()) > 0\n",
        "    predicted_direction = np.diff(predicted.flatten()) > 0\n",
        "    directional_accuracy = np.mean(actual_direction == predicted_direction) * 100\n",
        "\n",
        "    return {\n",
        "        'MSE': mse,\n",
        "        'RMSE': rmse,\n",
        "        'MAE': mae,\n",
        "        'MAPE': mape,\n",
        "        'Directional_Accuracy': directional_accuracy\n",
        "    }\n",
        "\n",
        "def plot_results(dates, actual, predicted, metrics):\n",
        "    plt.figure(figsize=(14, 6))\n",
        "\n",
        "    # Plot actual and predicted prices with line and dots\n",
        "    plt.plot(dates, actual, label='Actual Price', linewidth=2, alpha=0.8, marker='o', markersize=4)\n",
        "    plt.plot(dates, predicted, label='Predicted Price', linewidth=2, alpha=0.8, marker='o', markersize=4)\n",
        "\n",
        "    plt.title('Price Prediction', fontsize=14, fontweight='bold')\n",
        "    plt.xlabel('Date')\n",
        "    plt.ylabel('Close Price ($)')\n",
        "    plt.legend()\n",
        "    plt.grid(True, alpha=0.3)\n",
        "    plt.tight_layout()\n",
        "    plt.show()\n",
        "\n",
        "def print_performance_summary(metrics):\n",
        "\n",
        "\n",
        "    print(f\"Prediction Accuracy Metrics:\")\n",
        "    print(f\"Mean Squared Error (MSE):     {metrics['MSE']:.4f}\")\n",
        "    print(f\"Root Mean Squared Error:      {metrics['RMSE']:.4f}\")\n",
        "    print(f\"Mean Absolute Error (MAE):    {metrics['MAE']:.4f}\")\n",
        "    print(f\"Mean Absolute Percentage Error: {metrics['MAPE']:.2f}%\")\n",
        "    print(f\"Directional Accuracy:         {metrics['Directional_Accuracy']:.2f}%\")\n",
        "\n",
        "\n",
        "if __name__ == \"__main__\":\n",
        "    data = get_data('1y', '1d', 'GOOG')\n",
        "\n",
        "    if data is not None:\n",
        "\n",
        "        data_enhanced = add_enhanced_features(data)\n",
        "\n",
        "        feature_cols = [\n",
        "            'open', 'high', 'low', 'close', 'volume',\n",
        "            'close_lag_1', 'return_1d', 'ma_5', 'ma_10',\n",
        "            'price_momentum', 'volume_momentum', 'intraday_vol'\n",
        "        ]\n",
        "\n",
        "        feature_scaler = StandardScaler()\n",
        "        scaled_features = feature_scaler.fit_transform(data_enhanced[feature_cols])\n",
        "\n",
        "        close_scaler = MinMaxScaler()\n",
        "        scaled_close = close_scaler.fit_transform(data_enhanced[['close']])\n",
        "\n",
        "        sequence_length = 20\n",
        "        X, y = create_sequences(scaled_features, scaled_close, sequence_length)\n",
        "\n",
        "        print(f\"\\nSelecting best features...\")\n",
        "        X_selected, selected_features = select_best_features(X, y, feature_cols, k=8)\n",
        "\n",
        "        train_size = int(len(X_selected) * 0.9)\n",
        "        X_train = X_selected[:train_size]\n",
        "        y_train = y[:train_size]\n",
        "        X_test = X_selected[train_size:]\n",
        "        y_test = y[train_size:]\n",
        "\n",
        "        predictions, actual, history = train_model(X_train, y_train, X_test, y_test, close_scaler)\n",
        "\n",
        "        metrics = calculate_metrics(actual, predictions)\n",
        "\n",
        "        dates = data_enhanced.index[sequence_length + train_size : sequence_length + train_size + len(predictions)]\n",
        "\n",
        "        print_performance_summary(metrics)\n",
        "\n",
        "        plot_results(dates, actual, predictions, metrics)\n",
        "\n",
        "\n",
        "    else:\n",
        "        print(\"Failed to load data.\")"
      ]
    }
  ]
}